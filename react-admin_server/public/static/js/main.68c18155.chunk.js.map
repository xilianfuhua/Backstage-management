{"version":3,"sources":["components/link-button/index.jsx","api/ajax.js","api/index.js","utils/constants.js","pages/product/home.jsx","pages/product/pictures-Wall .jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","utils/memoryUtils.js","utils/storageUtils.js","redux/actions.js","redux/action-types.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/chart.jsx","pages/home/chart2.jsx","pages/home/chart3.jsx","pages/home/Sales-volume.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/admin/admin.jsx","App.js","redux/reducer.js","redux/store.js","index.js","assets/images/logo.svg"],"names":["LinkButton","props","className","ajax","url","data","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProducts","searchName","searchType","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRoles","roleName","reqUpdateRoles","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","reqWeather","jsonp","err","errcode","wea","wea_img","imgUrl","city","Option","ProductHome","state","total","products","loading","initColumns","columns","title","dataIndex","render","price","style","marginRight","onClick","updateStatus","showDetail","showUpdate","memoryUtils","history","push","getProducts","a","setState","result","list","success","this","value","width","onChange","placeholder","margin","event","target","extra","PlusOutlined","dataSource","bordered","rowKey","pagination","current","defaultPageSize","showQuickJumper","Component","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","previewTitle","fileList","getImgs","map","handleCancel","handlePreview","preview","originFileObj","substring","lastIndexOf","handleChange","console","log","length","imgs","img","index","uid","uploadButton","action","accept","listType","onPreview","visible","footer","onCancel","alt","src","React","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","PropTypes","string","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","Item","TextArea","ProductAddUpdate","formRef","createRef","options","initOptions","categorys","c","label","isLeaf","isUpdate","pCategoryId","getCategorys","subCategorys","childOptions","find","children","validatePrice","rule","Error","submit","validateFields","values","desc","categoryIds","pw","editor","goBack","resetFields","info","loadData","selectedOptions","targetOption","ArrowLeftOutlined","fontSize","labelCol","span","wrapperCol","ref","initialValue","rules","required","whitespace","autoSize","validator","addonAfter","ProductDetail","cName1","CName2","all","cName2","key","dangerouslySetInnerHTML","__html","Product","path","component","exact","to","store","set","remove","receiveUser","logout","storageUtils","Login","onFinish","login","logo","initialValues","remember","hasFeedback","min","max","prefix","UserOutlined","color","LockOutlined","htmlType","connect","dispatch","msg","menuList","icon","HomeOutlined","isPublic","AppstoreOutlined","BarsOutlined","ToolOutlined","SafetyCertificateOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","SubMenu","LeftNav","hasAuth","item","menus","indexOf","child","getMenuNodes","location","pathname","cItem","openKey","setHeaderTitle","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","headerTitle","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","currentTime","now","getTime","intervalId","setInterval","getWeather","getTitle","forEach","confirm","content","ExclamationCircleOutlined","okText","onOk","cancelText","clearInterval","Chart","getOption","tooltip","trigger","axisPointer","grid","left","right","bottom","containLabel","xAxis","axisTick","alignWithLabel","yAxis","series","barWidth","option","Chart2","sales","stores","legend","marginBottom","Chart3","getOption1","toolbox","show","feature","dataView","readOnly","magicType","restore","saveAsImage","calculable","markPoint","markLine","SalesVolume","TabPane","Home","QuestionCircleOutlined","gutter","precision","valueStyle","ArrowUpOutlined","suffix","ArrowDownOutlined","tabPosition","tab","AddForm","setFieldsValue","UpdateForm","Category","parentName","showStatus","category","showSubCategorys","showCategorys","showAdd","addCategory","errorInfo","updateCategory","ArrowRightOutlined","exyra","AuthForm","getMenus","checkedKeys","getTreeData","reduce","pre","onCheck","nextProps","initData","treeData","disabled","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","getRoles","onRow","addRole","uptateRole","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","UserForm","phone","email","PureComponent","propsTypes","array","isRequired","object","User","users","isShow","roleNames","deleteUser","initRoleName","getUsers","addOrUpdateUser","getFieldsValue","Bar","text","update","s","subtext","Line","i","t","Math","PI","r","sin","cos","polar","center","angleAxis","startAngle","radiusAxis","coordinateSystem","showSymbol","animationDuration","Pie","formatter","orient","radius","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","selectedMode","Footer","Sider","Content","Admin","backgroundColor","textAlign","initUser","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDom","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.68c18155.chunk.js","sourcesContent":["\r\n\r\nimport React from 'react'\r\nimport './index.css'\r\n\r\n//外形像连接的按钮\r\nexport default function LinkButton(props) {\r\n    return <button {...props} className='link-button'></button>\r\n}","/**\r\n * \r\n * 能发送异步ajax请求的函数模块\r\n * 封装axios库\r\n * 函数的返回值是promise对象\r\n * 1.优化1：统一处理请求异常\r\n * 在外层包一个自己创建的promise对象\r\n * 在请求出错时，不reject(error)，而是显示错误提示\r\n * 2.优化2：异步得到的不是response，而是response.data\r\n * 在请求成功resolve时：resolve(response.data)\r\n * \r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url,data={},type='GET') {\r\n\r\n    return new Promise((resolve,reject) => {\r\n        let promise\r\n        //1.执行异步ajax请求\r\n        if(type==='GET') { //发送get请求\r\n            promise = axios.get(url,{ //配置对象\r\n                params:data  //指定请求参数\r\n            })\r\n        } else { //发送post请求\r\n            promise = axios.post(url,data)\r\n        }\r\n        //2.如果成功了，调用resolve(value)\r\n        promise.then(response => {\r\n            resolve(response.data)\r\n        //3.如果失败了，不调用reject(reason),而是提示异常信息\r\n        }).catch(error => {\r\n            message.error('请求出错了：'+ error.message)\r\n        })\r\n    })\r\n}\r\n\r\n//请求登录接口\r\n// ajax('/login',{username:'tom',password:123456},'POST')","/**\r\n * \r\n * 包含应用中所有接口请求函数的模块\r\n * 每个接口的返回值都是promise\r\n * \r\n */\r\nimport jsonp from 'jsonp'\r\nimport ajax from './ajax'\r\nimport {message} from 'antd'\r\n\r\n// const BASE = 'http://localhost:5000'\r\nconst BASE = ''\r\n\r\n//登录\r\nexport const reqLogin = (username,password) => ajax(BASE+'/login',{username,password},'POST')\r\n\r\n//获取一级/二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list',{parentId})\r\n\r\n//添加分类\r\nexport const reqAddCategory = (categoryName,parentId) => ajax(BASE + '/manage/category/add',{categoryName,parentId},'POST')\r\n\r\n//更新分类\r\nexport const reqUpdateCategory = ({categoryId,categoryName}) => ajax(BASE + '/manage/category/update',{categoryId,categoryName},'POST')\r\n\r\n//获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info',{categoryId})\r\n\r\n//获取商品分页列表\r\nexport const reqProducts = (pageNum,pageSize) => ajax(BASE + '/manage/product/list',{pageNum,pageSize})\r\n\r\n//更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId,status) => ajax(BASE + '/manage/product/updateStatus',{productId,status},'POST')\r\n\r\n\r\n/*\r\n搜索商品分页列表(根据商品名称/商品描述)\r\nsearchType: 搜索类型，productName/productDesc\r\n*/\r\nexport const reqSearchProducts = ({ pageNum,pageSize,searchName,searchType}) => ajax(BASE +'/manage/product/search',{\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]:searchName\r\n})\r\n\r\n//搜索商品分页列表(根据商品描述)\r\n// export const reqSearchProducts2 = ({ pageNum,pageSize,searchName}) => ajax(BASE +'/manage/product/search',{\r\n//     pageNum,\r\n//     pageSize,\r\n//     productDesc:searchName\r\n// })\r\n\r\n//删除图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete',{name},'POST')\r\n\r\n//添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/'+ (product._id ? 'update' : 'add'),product,'POST')\r\n\r\n//修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update',product,'POST')\r\n\r\n//获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n\r\n//添加角色\r\nexport const reqAddRoles = (roleName) => ajax(BASE + '/manage/role/add',{roleName},'POST')\r\n\r\n//设置角色权限\r\nexport const reqUpdateRoles = (role) => ajax(BASE + '/manage/role/update',role,'POST')\r\n\r\n//获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n\r\n//删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId} ,'POST')\r\n\r\n//添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'),user,'POST')\r\n\r\n\r\n\r\n/*\r\njson请求的接口请求函数\r\n*/\r\nexport const reqWeather = () => {\r\n    return new Promise((resolve,reject) => {\r\n        const url = 'http://www.tianqiapi.com/api?version=v9&appid=23035354&appsecret=8YvlPNrz'\r\n    //发送jsonp请求\r\n    jsonp(url,{},(err,data) => {\r\n        //如果成功了\r\n        if(!data.errcode){\r\n            const {wea,wea_img} = data.data[0]\r\n            const imgUrl = `http://tq.daodaoim.com//tianqiapi/skin/pitaya/${wea_img}.png`\r\n            const city = data.city\r\n            resolve({wea,imgUrl,city})\r\n        } else {\r\n            //如果失败了\r\n            message.error('天气获取失败')\r\n        }\r\n    })\r\n    })\r\n}\r\nreqWeather()","/*\r\n包含一些常量的模块\r\n*/\r\nexport const PAGE_SIZE = 5 //每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","\r\n//Product的默认子路由组件\r\n\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Select,\r\n    Input,\r\n    Button,\r\n    Table,\r\n    message\r\n} from 'antd'\r\n\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from '../../api'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\nconst Option = Select.Option\r\n\r\nexport default class ProductHome extends Component {\r\n\r\n   state = {\r\n       total:0,//商品总数量\r\n       products:[], //商品的数组\r\n       loading:false, //是否在加载中\r\n       searchName:'', //搜索关键字名称\r\n       searchType:'productName', //根据哪个字段搜索\r\n   }\r\n\r\n   //初始化table的列的数组\r\n   initColumns = () => {\r\n    this.columns = [\r\n        {\r\n          title: '商品名称',\r\n          dataIndex: 'name',\r\n        },\r\n        {\r\n          title: '商品描述',\r\n          dataIndex: 'desc',\r\n        },\r\n        {\r\n          title: '价格',\r\n          dataIndex: 'price',\r\n          render: (price) => '￥' + price //当前指定了对应的属性，传入的是对应的属性值\r\n        },\r\n        {\r\n            title: '状态',\r\n            // dataIndex: 'status',\r\n            render: (product) => {\r\n                const {status,_id} = product\r\n                return (\r\n                    <span>\r\n                        <Button \r\n                        type='primary' \r\n                        style={{marginRight:10}} \r\n                        onClick={() => this.updateStatus(_id,status===1 ? 2 : 1)}\r\n                        >\r\n                            {status===1 ? '下架' : '上架'}\r\n                        </Button>\r\n                        <span>{status===1 ? '在售' : '已下架'}</span>\r\n                    </span>\r\n                )\r\n            }\r\n          },\r\n          {\r\n            title: '操作',\r\n            render: (product) => {\r\n                return (\r\n                    <span>\r\n                        {/* 将product对象使用state传递给目标路由组件 */}\r\n                        <LinkButton onClick={() => this.showDetail(product)}>详情</LinkButton>\r\n                        <LinkButton onClick={() => this.showUpdate(product)}>修改</LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n          },\r\n      ];\r\n   }\r\n\r\n   //显示商品详情界面\r\n   showDetail = (product) => {\r\n    memoryUtils.product = product\r\n    this.props.history.push('/product/detail')\r\n   }\r\n\r\n   //显示修改商品界面\r\n   showUpdate = (product) => {\r\n    memoryUtils.product = product\r\n    this.props.history.push('/product/addupdate')\r\n   }\r\n\r\n   //获取指定页码的列表数据显示\r\n   getProducts = async (pageNum) => {\r\n       this.pageNum = pageNum //保存pageNum\r\n       this.setState({loading:true}) //显示loading\r\n\r\n       const {searchName,searchType} = this.state\r\n       //如果搜索关键字有值，说明要做搜索分页\r\n       let result\r\n       if(searchName) {\r\n            result = await reqSearchProducts({pageNum,pageSize:PAGE_SIZE,searchName,searchType})\r\n       } else { //一般分页\r\n            result = await  reqProducts(pageNum,PAGE_SIZE)\r\n       }\r\n\r\n       this.setState({loading:false}) //隐藏loading\r\n       if(result.status===0) {\r\n           //取出分页数据，更新状态，显示分页列表\r\n           const {total,list} = result.data\r\n           this.setState({\r\n               total,\r\n               products:list\r\n           })\r\n       }\r\n   }\r\n\r\n   //更新指定商品的状态\r\n   updateStatus = async (productId,status) => {\r\n        const result = await reqUpdateStatus(productId,status)\r\n        if(result.status===0) {\r\n            message.success('修改商品成功',1)\r\n            this.getProducts(this.pageNum)\r\n        }\r\n   }\r\n\r\n   UNSAFE_componentWillMount () {\r\n       this.initColumns()\r\n   }\r\n\r\n   componentDidMount () {\r\n       this.getProducts(1)\r\n   }\r\n\r\n   render() {\r\n\r\n      //取出状态数据\r\n      const {products,total,loading,searchName,searchType} = this.state\r\n      \r\n      \r\n\r\n       const title = (\r\n           <span>\r\n               <Select value={searchType} \r\n               style={{width:120}} \r\n               onChange={value => {this.setState({searchType:value})}}\r\n               >\r\n                   <Option value='productName'>按名称搜索</Option>\r\n                   <Option value='productDesc'>按描述搜索</Option>\r\n               </Select>\r\n               <Input \r\n               placeholder='关键字' \r\n               style={{width:150,margin:'0 15px'}} \r\n               value={searchName}\r\n               onChange={event => {this.setState({searchName:event.target.value})}}\r\n               />\r\n               <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n           </span>\r\n       )\r\n\r\n       const extra = (\r\n           <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n               <PlusOutlined/>\r\n               添加商品\r\n           </Button>\r\n       )\r\n\r\n       return (\r\n          <Card title={title} extra={extra}>\r\n              <Table \r\n              dataSource={products} \r\n              bordered\r\n              loading={loading}\r\n              rowKey='_id'\r\n              columns={this.columns} \r\n              pagination={{\r\n                  current:this.pageNum,\r\n                  total, \r\n                  defaultPageSize:PAGE_SIZE,\r\n                  showQuickJumper:true,\r\n                  onChange:this.getProducts\r\n                //   this.getProducts 相当于 (pageNum) => {this.getProducts(pageNum)} 因为参数一样\r\n                  }}/>\r\n          </Card>\r\n       )\r\n   }\r\n}","import React from 'react'\r\nimport { Upload, Modal, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\n//用于图片上传的组件\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs:PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false,//标识是否显示大图预览modal\r\n    previewImage: '', //大图的url\r\n    previewTitle: '',\r\n    fileList: [\r\n      // {\r\n      //   uid: '-1', //每个file都自己唯一的id\r\n      //   name: 'image.png',//图片文件名\r\n      //   status: 'done', //图片状态 done：已上传 uploading：正在上传 removed：已删除\r\n      //   url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', //图片地址\r\n      // }\r\n    ],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const {imgs} = this.props\r\n    if (imgs && imgs.length>0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n  //获取所有已上传图片文件名的数组\r\n  getImgs = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  //隐藏modal\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async file => {\r\n    //显示指定file对应的大图\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  /*\r\n  fileList： 所有已上传图片文件对象的数组\r\n  file:当前操作的图片文件(上传/删除)\r\n  */\r\n  handleChange = async ({file, fileList }) => {\r\n    console.log('handleChange()',file.status, file)\r\n\r\n    //一旦上传成功，将当前上传的file信息修正(name,url)\r\n    if(file.status==='done') {\r\n      const result = file.response //{status:0,data:{name:xxx.jpg,url:'图片地址}}\r\n      if(result.status===0) {\r\n        message.success('上传图片成功')\r\n        const {name,url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status==='removed') {\r\n      //删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if(result.status===0) {\r\n        message.success('删除图片成功！')\r\n      } else {\r\n        message.error('删除图片失败！')\r\n      }\r\n    }\r\n\r\n    //在操作(上传/删除)过程中更新fileList状态\r\n    this.setState({ fileList })\r\n  }\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div className=\"ant-upload-text\">上传图片</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" //上传图片的接口地址\r\n          accept='image/*' //只接收图片\r\n          name='image' //请求参数名\r\n          listType=\"picture-card\" //卡片样式\r\n          fileList={fileList} //所有已上传文件对象的数组\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n//用来指定商品详情的富文本编辑器组件\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { EditorState, convertToRaw,ContentState} from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n\r\n  static propTypes = {\r\n      detail:PropTypes.string\r\n  }\r\n\r\n  state = {\r\n    editorState: EditorState.createEmpty(), //创建一个没有内容的编辑对象\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if(html) { //如果有值，根据html格式字符串创建一个对应的编辑兑对象\r\n        const contentBlock = htmlToDraft(html)\r\n        if (contentBlock) {\r\n          const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n          const editorState = EditorState.createWithContent(contentState)\r\n          this.state = {\r\n            editorState,\r\n          }\r\n        } else {\r\n            this.state = {\r\n                detail:PropTypes.string\r\n            }\r\n        }\r\n      }\r\n    }\r\n   \r\n\r\n  //输入过程中实时的回调\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n      //返回输入数据对应的html格式的文本\r\n      return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url //得到图片地址\r\n          resolve({data:{link:url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { editorState } = this.state\r\n    return (\r\n        <Editor\r\n          editorState={editorState}\r\n          editorStyle={{border:'1px solid black',minHeight:100,paddingLeft:10}}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n          }}\r\n        />\r\n    )\r\n  }\r\n}","\r\n//Product的产品添加和修改的子路由组件\r\n\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Form,\r\n    Input,\r\n    Cascader,\r\n    Button,\r\n    message\r\n} from 'antd'\r\n\r\n\r\n// import { FormInstance } from 'antd/lib/form'\r\n\r\nimport {ArrowLeftOutlined} from '@ant-design/icons'\r\n\r\nimport PicturesWall from './pictures-Wall '\r\nimport RichTextEditor from './rich-text-editor'\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys,reqAddOrUpdateProduct} from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\nconst {Item} = Form\r\nconst {TextArea} = Input\r\n\r\n\r\nexport default class ProductAddUpdate extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        // 创建用来保存ref标识的标签对象的容器\r\n        this.pw = React.createRef()\r\n        this.editor = React.createRef()\r\n      }\r\n\r\n   state = {\r\n    options:[],\r\n  }\r\n\r\n  initOptions = async (categorys) => {\r\n      //根据categorys数组生成options数组\r\n      const options = categorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: false //不是叶子：有二级\r\n      }))\r\n\r\n      //如果是二级分类商品的更新\r\n      const {isUpdate,product} = this\r\n      const {pCategoryId} = product\r\n      if(isUpdate && pCategoryId!=='0') {\r\n          //获取对应的二级分类列表\r\n          const subCategorys = await this.getCategorys(pCategoryId)\r\n          //生成二级下拉列表的options\r\n          const childOptions = subCategorys.map(c => ({\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: true //是叶子：没有二级\r\n          }))\r\n          //找到当前商品对应的一级options对象\r\n          const targetOption = options.find(options => options.value===pCategoryId)\r\n          //关联到对应的一级options\r\n          targetOption.children = childOptions\r\n      } \r\n\r\n      //更新options状态\r\n      this.setState({\r\n        options\r\n      })\r\n  }\r\n\r\n  /*\r\n    获取一级/二级分类列表并显示\r\n    async函数的返回值是一个新的promise对象，promise的结果和值由async的结果来决定\r\n  */\r\n  getCategorys = async (parentId) => {\r\n        const result = await reqCategorys(parentId) //{status:0,data:categorys}\r\n        if(result.status===0) {\r\n            const categorys = result.data\r\n            //如果是一级分类列表\r\n            if(parentId==='0') {\r\n                this.initOptions(categorys)\r\n            } else { //二级列表\r\n                return categorys //返回二级列表 => 当前async函数返回的promise就会成功且value为categorys\r\n            }\r\n        }\r\n  }\r\n\r\n   //验证价格的自定义函数\r\n   validatePrice = async (rule, value) => {\r\n        if(value*1 > 0) {\r\n            console.log('价格验证通过')\r\n        } else {\r\n            throw new Error('价格必须大于0！')\r\n        }\r\n   }\r\n\r\n   submit = () => {\r\n    this.formRef.current.validateFields()\r\n    .then( async values => {\r\n\r\n        //1.搜集数据，并封装成product对象\r\n        const {name,desc,price,categoryIds} = values\r\n        let pCategoryId,categoryId\r\n        if(categoryIds.length===1) {\r\n            pCategoryId='0'\r\n            categoryId = categoryIds[0]\r\n        } else {\r\n            pCategoryId = categoryIds[0]\r\n            categoryId = categoryIds[1]\r\n        }\r\n        const imgs = this.pw.current.getImgs()\r\n        const detail = this.editor.current.getDetail()\r\n\r\n        const product = {name,desc,price,imgs,detail,pCategoryId,categoryId}\r\n        \r\n        //如果需要更新，需要添加_id\r\n        if(this.isUpdate) {\r\n            product._id = this.product._id\r\n        }\r\n\r\n        //2.调用接口请求函数添加/更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n\r\n        //3.根据结果提示\r\n        if(result.status===0) {\r\n            message.success(`${this.isUpdate ? '修改' : '添加'}商品成功`)\r\n            this.props.history.goBack()\r\n        } else {\r\n            message.error(`${this.isUpdate ? '修改' : '添加'}商品失败`)\r\n        }\r\n\r\n        \r\n        // console.log(\"表单数据为：\" , values)\r\n        // console.log(\"子组件传过来的数组为：\" , imgs,detail)\r\n        this.formRef.current.resetFields()//清除输入\r\n        this.setState({\r\n            visible: false\r\n        })\r\n    })\r\n    .catch(info => {\r\n        console.log('Validate Failed:', info)\r\n    })\r\n\r\n   }\r\n\r\n   //用于加载下一级列表的回调函数\r\n   loadData = async selectedOptions => {\r\n       //得到选择的options对象\r\n    const targetOption = selectedOptions[0]\r\n    //显示loading\r\n    targetOption.loading = true\r\n\r\n    //根据选中的分类请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    //隐藏loading\r\n    targetOption.loading = false\r\n    //二级分类数组有数据\r\n    if(subCategorys && subCategorys.length>0) {\r\n        //生成一个二级列表的Options\r\n        const childOptions = subCategorys.map(c => ({\r\n            value: c._id,\r\n            label: c.name,\r\n            isLeaf: true //是叶子：没有二级\r\n        }))\r\n        //关联到当前的option上\r\n        targetOption.children = childOptions\r\n    } else { //当前选中的分类没有二级\r\n        targetOption.isLeaf = true\r\n    }\r\n    //更新options状态\r\n    this.setState({\r\n        options: [...this.state.options],\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getCategorys('0')\r\n  }\r\n\r\n  UNSAFE_componentWillMount () {\r\n      //取出携带的state\r\n      const product = memoryUtils.product //如果是添加没值，否则有值\r\n      //保存一个是否修改商品的标识\r\n      this.isUpdate = !!product._id\r\n      //保存商品(如果没有)\r\n      this.product = product || {}\r\n  }\r\n\r\n  //在卸载之前清除保存的数据\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n   render() {\r\n\r\n       const {isUpdate,product} = this\r\n       const {pCategoryId,categoryId,imgs,detail} = product\r\n       //用来接收级联分类id的数组\r\n       const categoryIds = []\r\n       if(isUpdate) {\r\n            //商品是一个一级分类的商品\r\n            if(pCategoryId==='0') {\r\n                categoryIds.push(categoryId)\r\n            } else {\r\n                //商品是一个二级分类的商品\r\n                categoryIds.push(pCategoryId)\r\n                categoryIds.push(categoryId)\r\n            }\r\n       }\r\n    \r\n       const title = (\r\n           <span>\r\n               <LinkButton>\r\n                    <ArrowLeftOutlined \r\n                    style={{marginRight:7,fontSize:17}}\r\n                    onClick={() => this.props.history.goBack()}\r\n                    />\r\n               </LinkButton>\r\n               <span> {isUpdate ? '修改商品' : '添加商品'} </span>\r\n           </span>\r\n       )\r\n\r\n        //指定Item布局的配置对象\r\n       const layout = {\r\n        labelCol: { span: 2 }, //左侧label的宽度\r\n        wrapperCol: { span: 8}, // 右侧包裹的宽度\r\n      }\r\n\r\n    //   const {form} = Form.useForm()\r\n\r\n       return (\r\n           <Card title={title}>\r\n               <Form \r\n            //    form={form}\r\n               {...layout}\r\n               ref={this.formRef}\r\n               >\r\n                <Item label=\"商品名称\" \r\n                name='name' \r\n                initialValue={product.name}\r\n                rules={\r\n                    [\r\n                        { required: true,whitespace:true,message:'必须输入商品名称'}\r\n                    ]\r\n                        }>\r\n                    <Input placeholder='请输入商品名称'/>\r\n                </Item>\r\n                <Item \r\n                label=\"商品描述\" \r\n                name='desc' \r\n                initialValue={product.desc}\r\n                rules={\r\n                    [\r\n                        { required: true,whitespace:true,message:'必须输入商品描述'}\r\n                    ]\r\n                    }>\r\n                    <TextArea placeholder='请输入商品描述' autoSize />\r\n                </Item>\r\n                <Item\r\n                label=\"商品价格\" \r\n                name='price' \r\n                initialValue={product.price}\r\n                rules={\r\n                    [\r\n                        { required: true,message:'必须输入商品价格且'},\r\n                        {validator:this.validatePrice}\r\n                    ]\r\n                    }>\r\n                    <Input type='number' placeholder='请输入商品价格' addonAfter=\"元\"/>\r\n                </Item>\r\n                <Item \r\n                label=\"商品分类\" \r\n                name='categoryIds' \r\n                initialValue={categoryIds}\r\n                rules={\r\n                    [\r\n                        { required: true,message:'必须选择商品分类' }\r\n                    ]\r\n                    }>\r\n                <Cascader\r\n                    placeholder='请选择商品分类'\r\n                    options={this.state.options} //需要显示的列表数据数组\r\n                    loadData={this.loadData} //当选择某个列表选项，加载下一级列表的监听\r\n                />\r\n                </Item>\r\n                <Item label=\"商品图片\">\r\n                    <PicturesWall ref={this.pw} imgs={imgs}/>\r\n                </Item>\r\n                <Item label=\"商品详情\" labelCol={{span: 2 }} wrapperCol={{span:20}} >\r\n                    <RichTextEditor ref={this.editor} detail={detail}/>\r\n                </Item>\r\n                <Item>\r\n                    <Button type='primary' onClick={this.submit}>提交</Button>\r\n                </Item>\r\n               </Form>\r\n           </Card>\r\n       )\r\n   }\r\n}\r\n\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n /*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */","\r\n//Product的详情子路由组件\r\n\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    List\r\n} from 'antd'\r\n\r\nimport {ArrowLeftOutlined} from '@ant-design/icons'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\n\r\nconst Item = List.Item\r\n\r\n// import   '../../assets/images'\r\n\r\nexport default class ProductDetail extends Component {\r\n\r\n   state = {\r\n       cName1:'', //一级分类名称\r\n       CName2:'' //二级分类名称\r\n   }\r\n\r\n   async componentDidMount () {\r\n       //得到当前商品的分类id\r\n       const {categoryId,pCategoryId} = memoryUtils.product\r\n       if(pCategoryId==='0') { //一级分类下的商品\r\n            const result = await reqCategory(categoryId)\r\n            const cName1 = result.data.name\r\n            this.setState({cName1})\r\n       } else {\r\n           /*\r\n            // 通过多个await方式发多个请求：后面一个请求是在前一个请求成功后才发\r\n            const result1 = await reqCategory(pCategoryId)\r\n            const result2 = await reqCategory(categoryId)\r\n            const cName1 = result1.status\r\n            const cName2 = result2.status\r\n            */\r\n           //一次性发送多个请求，只有都成功了，才正常处理\r\n           const result = await Promise.all([reqCategory(pCategoryId),reqCategory(categoryId)])\r\n           const cName1 = result[0].data.name\r\n            const cName2 = result[1].data.name\r\n            this.setState({\r\n                cName1,\r\n                cName2\r\n            })\r\n       }\r\n   }\r\n\r\n   //在卸载之前清除保存的数据\r\n  componentWillUnmount () {\r\n    memoryUtils.product = {}\r\n  }\r\n\r\n   render() {\r\n       const title = (\r\n            <span>\r\n                <LinkButton>\r\n                    <ArrowLeftOutlined \r\n                    style={{marginRight:7,fontSize:17}}\r\n                    onClick={() => this.props.history.goBack()}\r\n                    />\r\n                </LinkButton>\r\n                <span>商品详情</span>\r\n            </span>\r\n       )\r\n       const {name,desc,price,imgs,detail} = memoryUtils.product\r\n       const {cName1,cName2} = this.state\r\n       return (\r\n           <Card title={title} className='product-detail'>\r\n               <List bordered>\r\n                   <Item>\r\n                       <span className='lef'>商品名称：</span>\r\n                       <span className='le'>{name}</span>\r\n                   </Item>\r\n                   <Item>\r\n                       <span className='lef'>商品描述：</span>\r\n                       <span className='le'>{desc}</span>\r\n                   </Item>\r\n                   <Item>\r\n                       <span className='lef'>商品价格：</span>\r\n                       <span className='le'> {price} </span>\r\n                   </Item>\r\n                   <Item>\r\n                       <span className='lef'>所属分类：</span>\r\n                       <span className='le'>{cName1} {cName2 ? '-->' + cName2 : ''} </span>\r\n                   </Item>\r\n                   <Item className='he'>\r\n                       <span className='lef'>商品图片：</span>\r\n                       <span className='le'>\r\n                           \r\n                        {\r\n                            imgs.map(img => (\r\n                            <img\r\n                                key={img}\r\n                                src={BASE_IMG_URL + img}\r\n                                className=\"product-img\"\r\n                                alt=\"img\"\r\n                            />\r\n                            ))\r\n                        }\r\n                       </span>\r\n                   </Item>\r\n                   <Item>\r\n                       <span className='lef'>商品详情：</span>\r\n                       <span className='le' dangerouslySetInnerHTML={{__html:detail}}></span>\r\n                   </Item>\r\n               </List>\r\n           </Card>\r\n       )\r\n   }\r\n}","\r\n/**\r\n * 商品分类路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\n\r\nimport ProductHome from './home'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.css'\r\nexport default class Product extends Component {\r\n   render() {\r\n       return (\r\n           <Switch>\r\n               <Route path='/product' component={ProductHome} exact/> {/*路径完全匹配*/}\r\n               <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n               <Route path='/product/detail' component={ProductDetail}/>\r\n               <Redirect to='/product'/>\r\n           </Switch>\r\n       )\r\n   }\r\n}","/**\r\n * \r\n * 用来在保存一些数据的工具模块\r\n * \r\n */\r\n\r\nimport Product from \"../pages/product/product\";\r\n\r\n export default {\r\n     user:{}, // 保存当前登录的user\r\n     product:{},//指定的商品对象\r\n }","/**\r\n * \r\n * 进行local数据存储管理的工具模块\r\n * \r\n */\r\nimport store from 'store'\r\n\r\n const USER_KEY = 'user_key'\r\n export default {\r\n     //保存user\r\n    saveUser(user) {\r\n        // localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n        store.set(USER_KEY,user)\r\n    },\r\n     //读取user\r\n    getUser() {\r\n        // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n     //删除user\r\n     removeUser() {\r\n        //  localStorage.removeItem(USER_KEY)\r\n        store.remove(USER_KEY)\r\n     }\r\n }","/*\r\n包含n个action creator函数的模块\r\n同步action: 对象 {type: 'xxx', data: 数据值}\r\n异步action: 函数  dispatch => {}\r\n */\r\n\r\n import {\r\n     SET_HEADER_TITLE,\r\n     RECEIVE_USER,\r\n     RESET_USER\r\n} from './action-types'\r\nimport {reqLogin} from '../api'\r\nimport { message } from 'antd'\r\nimport storageUtils from '../utils/storageUtils'\r\n\r\n //设置头部标题的同步action\r\nexport const setHeaderTitle = (headerTitle) => ({type:SET_HEADER_TITLE,data:headerTitle})\r\n\r\n//接收用户的同步action\r\nexport const receiveUser = (user) => ({type:RECEIVE_USER,user})\r\n\r\n/*\r\n退出登陆的同步action\r\n */\r\nexport const logout = () =>  {\r\n    // 删除local中的user\r\n    storageUtils.removeUser()\r\n    // 返回action对象\r\n    return {type: RESET_USER}\r\n  }\r\n\r\n//登录的异步action\r\nexport const login = (username,password) => {\r\n    return async dispatch => {\r\n        //1.执行异步ajax请求\r\n        const result = await reqLogin(username,password) //{status:0,data:user} {status:1,msg:'xxxx'}\r\n        //2.如果成功，分发成功的同步action\r\n        if(result.status===0) {\r\n            const user = result.data\r\n            //保存local中\r\n            storageUtils.saveUser(user)\r\n            dispatch(receiveUser(user))\r\n        } else {\r\n            //3.如果失败，分发失败的同步action\r\n            const msg = result.msg\r\n            message.error(msg,1.5)\r\n        }\r\n    }\r\n}","/*\r\n包含n个action的type常量标识名称的模块\r\n */\r\n\r\nexport const SET_HEADER_TITLE = 'set_header_title' // 设置头部标题\r\nexport const RECEIVE_USER = 'receive_user'  // 接收用户信息\r\nexport const SHOW_ERROR_MSG = 'show_error_msg' // 显示错误信息\r\nexport const RESET_USER = 'reset_user' // 重置用户信息","/**\r\n * \r\n * 登入的路由组件\r\n * \r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { \r\n    Form,\r\n    Input, \r\n    Button,\r\n    message\r\n} from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './login.css'\r\nimport logo from '../../assets/images/logo.svg'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport {login} from '../../redux/actions'\r\n\r\n\r\n/**\r\n * \r\n * async和await\r\n * \r\n */\r\n\r\nclass Login extends Component {\r\n   render() {\r\n\r\n    //如果用户已经登入，自动跳转到管理界面\r\n    const user = this.props.user\r\n    if(user && user._id) {\r\n        return <Redirect to='/home'/>\r\n    }\r\n\r\n    //对所有表单字段进行检验\r\n    const onFinish = async values => {\r\n        // console.log('提交登录的ajax请求',values)\r\n        const {username,password} = values\r\n            //调用分发异步action的函数 => 发登录的异步请求，有了结果后更新状态\r\n            this.props.login(username,password)\r\n      }\r\n       return (\r\n           <div className='login'>\r\n               <header className='login-header'>\r\n                   <img src={logo} alt=\"logo\"/>\r\n                   <h1>后台管理系统</h1>\r\n               </header>\r\n               <section className='login-content'> \r\n                   <h2>用户登录</h2>\r\n                   <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    >\r\n                    <Form.Item name=\"username\"\r\n                    hasFeedback\r\n                    //声明式验证：直接用别人定义好的规则进行验证\r\n                    rules={\r\n                        [\r\n                            { required: true,whitespace:true, message: '请输入用户名!' },\r\n                            { min: 4, message: '用户名至少4位!' },\r\n                            { max: 12, message: '用户名最多12位!' },\r\n                      \r\n                        ]\r\n                    }>\r\n                        <Input \r\n                        prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                        type=\"username\"\r\n                        placeholder=\"用户名\"\r\n                        style={{ fontSize: '14px', color: '#08c' }}  \r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\"\r\n                    rules={\r\n                        [\r\n                            { required: true,whitespace:true, message: '请输入密码!' },\r\n                            { min: 4, message: '密码至少4位!' },\r\n                            { max: 12, message: '密码最多12位!' }\r\n                            ]\r\n                        } hasFeedback>\r\n                        <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"密码\"\r\n                        style={{ fontSize: '14px', color: '#08c'}}\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        登录\r\n                        </Button>\r\n                    </Form.Item>\r\n                    </Form>\r\n               </section>\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user:state.user}),\r\n    {login}\r\n)(Login)\r\n\r\n/**\r\n * \r\n * 1.前台表单验证\r\n * 2.搜集表单数据\r\n */","\r\nimport {\r\n    HomeOutlined ,\r\n    AppstoreOutlined ,\r\n    BarsOutlined ,\r\n    ToolOutlined ,\r\n    UserOutlined ,\r\n    SafetyCertificateOutlined ,\r\n    AreaChartOutlined ,\r\n    BarChartOutlined ,\r\n    LineChartOutlined ,\r\n    PieChartOutlined \r\n  } from '@ant-design/icons'\r\n\r\nconst menuList = [\r\n    {\r\n      title: '首页', // 菜单标题名称\r\n      key: '/home', // 对应的path\r\n      icon: HomeOutlined, // 图标名称\r\n      isPublic: true, // 公开的\r\n    },\r\n    {\r\n      title: '商品',\r\n      key: '/products',\r\n      icon: AppstoreOutlined,\r\n      children: [ // 子菜单列表\r\n        {\r\n          title: '品类管理',\r\n          key: '/category',\r\n          icon: BarsOutlined\r\n        },\r\n        {\r\n          title: '商品管理',\r\n          key: '/product',\r\n          icon:ToolOutlined\r\n        },\r\n      ]\r\n    },\r\n  \r\n    {\r\n      title: '用户管理',\r\n      key: '/user',\r\n      icon: UserOutlined\r\n    },\r\n    {\r\n      title: '角色管理',\r\n      key: '/role',\r\n      icon: SafetyCertificateOutlined\r\n    },\r\n  \r\n    {\r\n      title: '图形图表',\r\n      key: '/charts',\r\n      icon: AreaChartOutlined,\r\n      children: [\r\n        {\r\n          title: '柱形图',\r\n          key: '/charts/bar',\r\n          icon: BarChartOutlined\r\n        },\r\n        {\r\n          title: '折线图',\r\n          key: '/charts/line',\r\n          icon: LineChartOutlined\r\n        },\r\n        {\r\n          title: '饼图',\r\n          key: '/charts/pie',\r\n          icon: PieChartOutlined\r\n        },\r\n      ]\r\n    }\r\n  ]\r\n  \r\n  export default menuList","\r\n\r\nimport React, { Component } from 'react'\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport {Menu} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './index.css'\r\nimport login from '../../assets/images/logo.svg'\r\nimport menuList from '../../config/menuConfig'\r\nimport {setHeaderTitle} from '../../redux/actions'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nclass LeftNav extends Component {\r\n\r\n    //判断当前登录用户对item是否有权限\r\n    hasAuth = (item) => {\r\n        const {key,isPublic} = item\r\n\r\n        const menus = this.props.user.role.menus\r\n        const username = this.props.user.username\r\n        /*\r\n        1.如果当前用户是admin\r\n        2.如果当前item是公开的\r\n        3.当前用户有此item的权限：key有没有在menus中\r\n        */\r\n       if(username==='admin' || isPublic || menus.indexOf(key) !== -1) {\r\n        return true\r\n       } else if(item.children) { //如果当前用户有此item的某个子item的权限\r\n        return !!item.children.find(child => menus.indexOf(child.key) !== -1)\r\n       }\r\n        return false\r\n    }\r\n\r\n    /*\r\n       根据menu的数据数组动态生成对应的Menu.Item和SubMenu的标签数组\r\n       使用map() + 递归调用\r\n       */\r\n      getMenuNodes = (menuList) => {\r\n        //得到当前请求的路由路径\r\n        const path = this.props.location.pathname\r\n\r\n        return menuList.map(item => {\r\n            /*\r\n             {\r\n                title: '首页', // 菜单标题名称\r\n                key: '/home', // 对应的path\r\n                icon: 'home', // 图标名称\r\n                children:[] // 可能有，也可能没有\r\n            }\r\n\r\n            <Menu.Item key=\"1\" \r\n                icon={<PieChartOutlined />}>\r\n                    <Link to='/home'>首页</Link>\r\n            </Menu.Item>\r\n\r\n            <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"商品\">\r\n                    <Menu.Item key=\"2\" icon={<MailOutlined />}>\r\n                        <Link to='/product'>品类管理</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\" icon={<MailOutlined />}>\r\n                        <Link to='/category'>商品管理</Link>\r\n                    </Menu.Item>\r\n            </SubMenu>\r\n            */\r\n\r\n            //如果当前用户有item对应的权限，才需要显示对应的菜单项\r\n            if(this.hasAuth(item)) {\r\n                if(!item.children){\r\n                    //判断item是否是当前对应的item\r\n                    if(item.key===path || path.indexOf(item.key)===0) {\r\n                        this.props.setHeaderTitle(item.title)\r\n                    }\r\n                    return (\r\n                     <Menu.Item key={item.key}\r\n                     icon={<item.icon/>}>\r\n                         <Link to={item.key} onClick={() => this.props.setHeaderTitle(item.title)}>{item.title}</Link>\r\n                     </Menu.Item>\r\n                    )\r\n                } else {\r\n     \r\n                     //查找一个与当前路径匹配的子Item\r\n                     const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n                     //如果存在，说明当前子列表需要打开\r\n                     if(cItem) {\r\n                         this.openKey = item.key\r\n                     }\r\n     \r\n                     return (\r\n                         <SubMenu key={item.key} icon={<item.icon/>} title={item.title}>\r\n                            {this.getMenuNodes(item.children)}\r\n                         </SubMenu>\r\n                     )\r\n                }\r\n            }\r\n        })\r\n   }\r\n\r\n   /*\r\n    在第一次render()之前执行一次\r\n    为第一次render()准备数据(必须同步的)\r\n   */\r\n    UNSAFE_componentWillMount () {\r\n       this.menuNodes = this.getMenuNodes(menuList)\r\n   }\r\n\r\n   render() {\r\n       //得到当前请求的路由路径\r\n       let path = this.props.location.pathname\r\n       if(path.indexOf('/product')===0) { //当前请求的商品或其子路由界面\r\n            path = '/product'           \r\n       }\r\n\r\n\r\n       //得到需要打开菜单项的key\r\n       const openKey = this.openKey\r\n\r\n       return (\r\n           <div>\r\n                <div className='left-nav'>\r\n                    <Link to='/' className='left-nav-header'>\r\n                            <img src={login} alt=\"login\"/>\r\n                            <h1>React后台</h1>\r\n                    </Link>\r\n                </div>\r\n                    <Menu\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                    selectedKeys={[path]}\r\n                    defaultOpenKeys={[openKey]}\r\n                    >\r\n                    {\r\n                        this.menuNodes\r\n                    }\r\n                    </Menu>\r\n           </div>\r\n       )\r\n   }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件：\r\n包装非路由组件，返回一个新的组件\r\n新的组件向非路由组件传递3个属性：history/location/match\r\n*/\r\nexport default connect(\r\n    state => ({user:state.user}),\r\n    {setHeaderTitle}\r\n) (withRouter(LeftNav))","/*包含 n 个日期时间处理的工具函数模块 */\r\n/*格式化日期 */\r\nexport function formateDate(time) { \r\n    if (!time) return '' \r\n    let date = new Date(time) \r\n    return date.getFullYear() + '-' \r\n    + (date.getMonth() + 1) + '-' \r\n    + date.getDate() + '    '\r\n    + ( date.getHours() < 10 ? '0' + date.getHours() + ':' : date.getHours() + ':')\r\n    + ( date.getMinutes() < 10 ? '0' +  date.getMinutes() + ':' : date.getMinutes() + ':') \r\n    + ( date.getSeconds() < 10 ? '0' +  date.getSeconds() : date.getSeconds()) \r\n} ","\r\n\r\nimport React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport {connect} from 'react-redux'\r\n\r\nimport LinkButton from '../link-button'\r\nimport {reqWeather} from '../../api'\r\nimport menuList from '../../config/menuConfig'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport './index.css'\r\nimport {logout} from '../../redux/actions'\r\n\r\nclass Header extends Component {\r\n\r\n    state = {\r\n        currentTime:formateDate(Date.now()), //当前时间字符串\r\n        imgUrl:'' , //天气图片地址\r\n        wea:'' , //天气的文本\r\n        city:'' //城市\r\n    }\r\n\r\n    getTime = () => {\r\n        //每隔一秒钟获取当前时间，并更新状态数据currentTime\r\n        this.intervalId = setInterval(() => {\r\n            const currentTime = formateDate(Date.now())\r\n            this.setState({currentTime})\r\n        }, 1000);\r\n    }\r\n\r\n    getWeather= async () => {\r\n        //调用接口请求函数\r\n        const {wea,imgUrl,city} = await reqWeather()\r\n        //更新状态\r\n        this.setState({wea,imgUrl,city})\r\n    }\r\n\r\n    getTitle = () => {\r\n        //得到当前请求路径\r\n        const path = this.props.location.pathname\r\n\r\n        let title\r\n        menuList.forEach(item => {\r\n            if(item.key===path) { //如果当前item对象的key与path一样，itemde title就是需要显示的title\r\n                title = item.title\r\n            } else if (item.children) {\r\n                //在所有子item中查找匹配的\r\n                const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n                //如果有值才能说明匹配了\r\n                if(cItem) {\r\n                    //取出他的title\r\n                    title = cItem.title\r\n                }\r\n            }\r\n        })\r\n        return title\r\n    }\r\n\r\n    //退出登录\r\n    logout = () => {\r\n        \r\n        //显示确认框\r\n        Modal.confirm({\r\n            title: '您确定要退出吗?',\r\n            content: '您还是再挣扎一下下吧',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText:'确定',\r\n            onOk: () => {\r\n            this.props.logout()\r\n            },\r\n            cancelText:'取消'\r\n          })\r\n    }\r\n \r\n    /*\r\n    第一次render()之后执行一次\r\n    一般在此执行异步操作：发ajax请求/启动定时器\r\n    */\r\n    componentDidMount () {\r\n        //获取当前时间\r\n        this.getTime()\r\n        //获取当前天气\r\n        this.getWeather()\r\n    }\r\n\r\n    //不能这么做：不会更新显示\r\n    // UNSAFE_componentWillMount () {\r\n    //      this.title = this.getTitle()\r\n    // }\r\n\r\n    //在当前组件卸载之前调用\r\n    componentWillUnmount () {\r\n        //清除定时器\r\n        clearInterval(this.intervalId)\r\n    }\r\n\r\n   render() {\r\n\r\n       const {currentTime,imgUrl,wea,city} = this.state\r\n       const username = this.props.user.username\r\n\r\n        //得到当前需要显示的title\r\n        //const title = this.getTitle()\r\n        const title = this.props.headerTitle\r\n        console.log('---',title)\r\n       \r\n\r\n       return (\r\n           <div className='header'>\r\n               <div className='header-top'>\r\n                   <span>欢迎你 :  {username} </span>\r\n                   <LinkButton onClick={this.logout}>退出</LinkButton>\r\n               </div>\r\n               <div className='header-bottom'>\r\n                   <div className='header-bottom-left'>{title}</div>\r\n                   <div className='header-bottom-right'>\r\n                       <span>{currentTime}</span>\r\n                       <span className='span0'>{city}</span>\r\n                       <span>{wea}</span>\r\n                       <img src={imgUrl} alt=\"weather\"/>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       )\r\n   }\r\n}\r\nexport default connect(\r\n    state => ({headerTitle:state.headerTitle,user:state.user}),\r\n    {logout}\r\n)(withRouter(Header))","\r\n\r\nimport React, { Component } from 'react'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\nexport default class Chart extends Component {\r\n\r\n    getOption = () => {\r\n        return {\r\n            color: ['#3398DB'],\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {            // 坐标轴指示器，坐标轴触发有效\r\n            type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n        }\r\n    },\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n    },\r\n    xAxis: [\r\n        {\r\n            type: 'category',\r\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n            axisTick: {\r\n                alignWithLabel: true\r\n            }\r\n        }\r\n    ],\r\n    yAxis: [\r\n        {\r\n            type: 'value'\r\n        }\r\n    ],\r\n    series: [\r\n        {\r\n            name: '直接访问',\r\n            type: 'bar',\r\n            barWidth: '60%',\r\n            data: [10, 52, 200, 334, 390, 330, 220]\r\n        }\r\n    ]\r\n        }\r\n    }\r\n\r\n   render() {\r\n       return (\r\n        <div>\r\n            <ReactEcharts option={this.getOption()}/> \r\n        </div>\r\n       )\r\n   }\r\n}","\r\n/**\r\n * 柱状图路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {Card} from 'antd' \r\nimport ReactEcharts from 'echarts-for-react'\r\nexport default class Chart2 extends Component {\r\n\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n        stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n      }\r\n    \r\n\r\n    getOption = (sales,stores) => {\r\n        return {\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量','库存','浏览量']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: sales\r\n            },\r\n            {\r\n                name: '库存',\r\n                type: 'bar',\r\n                data: stores\r\n            },\r\n            {\r\n                name: '浏览量',\r\n                type: 'bar',\r\n                data: [20,30,40,25,23,33]\r\n            }]\r\n        }\r\n    }\r\n\r\n   render() {\r\n       const {sales,stores} = this.state\r\n       return (\r\n           <div style={{marginBottom:'-45px'}}>\r\n                <Card bordered={false}> \r\n                    <ReactEcharts option={this.getOption(sales,stores)}/> \r\n                </Card>\r\n           </div>\r\n       )\r\n   }\r\n}","\r\n/**\r\n * 柱状图路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {Card, Button} from 'antd' \r\nimport ReactEcharts from 'echarts-for-react'\r\nexport default class Chart3 extends Component {\r\n    getOption1 = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['出货量', '进货量']\r\n            },\r\n            toolbox: {\r\n                show: true,\r\n                feature: {\r\n                    dataView: {show: true, readOnly: false},\r\n                    magicType: {show: true, type: ['line', 'bar']},\r\n                    restore: {show: true},\r\n                    saveAsImage: {show: true}\r\n                }\r\n            },\r\n            calculable: true,\r\n            xAxis: [\r\n                {\r\n                    type: 'category',\r\n                    data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n                }\r\n            ],\r\n            yAxis: [\r\n                {\r\n                    type: 'value'\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    name: '蒸发量',\r\n                    type: 'bar',\r\n                    data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],\r\n                    markPoint: {\r\n                        data: [\r\n                            {type: 'max', name: '最大值'},\r\n                            {type: 'min', name: '最小值'}\r\n                        ]\r\n                    },\r\n                    markLine: {\r\n                        data: [\r\n                            {type: 'average', name: '平均值'}\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    name: '降水量',\r\n                    type: 'bar',\r\n                    data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],\r\n                    markPoint: {\r\n                        data: [\r\n                            {name: '年最高', value: 182.2, xAxis: 7, yAxis: 183},\r\n                            {name: '年最低', value: 2.3, xAxis: 11, yAxis: 3}\r\n                        ]\r\n                    },\r\n                    markLine: {\r\n                        data: [\r\n                            {type: 'average', name: '平均值'}\r\n                        ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n   render() {\r\n       return (\r\n           <div style={{marginBottom:'-45px'}}>\r\n                <Card bordered={false}> \r\n                    <ReactEcharts option={this.getOption1()}/> \r\n                </Card>\r\n           </div>\r\n       )\r\n   }\r\n}","\r\n/**\r\n * 折线图路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {Card} from 'antd' \r\nimport ReactEcharts from 'echarts-for-react'\r\nexport default class SalesVolume extends Component {\r\n\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20,41], // 销量的数组\r\n        stores: [6, 10, 25, 20, 15, 10,26], // 库存的数组\r\n      }\r\n    \r\n\r\n    getOption = (sales,stores) => {\r\n        return {\r\n            tooltip: {},\r\n            legend: {\r\n                data:['衬衫','羊毛衫','雪纺衫']\r\n            },\r\n            xAxis: {\r\n                data: [\"周一\",\"周二\",\"周三\",\"周四\",\"周五\",\"周六\",\"周日\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '衬衫',\r\n                type: 'line',\r\n                data: sales\r\n            },\r\n            {\r\n                name: '羊毛衫',\r\n                type: 'line',\r\n                data: stores\r\n            },\r\n            {\r\n                name: '雪纺衫',\r\n                type: 'line',\r\n                data: [20,30,40,25,23,33,55]\r\n            }]\r\n        }\r\n    }\r\n   \r\n   render() {\r\n    const {sales,stores} = this.state\r\n        return (\r\n            <div>\r\n                <Card bordered={false}> \r\n                    <ReactEcharts option={this.getOption(sales,stores)}/> \r\n                </Card>\r\n            </div>\r\n        )\r\n   }\r\n}","\r\n/**\r\n * 首页路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport { Statistic, Card, Row, Col,Tabs ,Button } from 'antd'\r\nimport { QuestionCircleOutlined,ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons'\r\n\r\nimport './home.css'\r\nimport Chart from './chart'\r\nimport Chart2 from './chart2'\r\nimport Chart3 from './chart3'\r\nimport SalesVolume from './Sales-volume'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport default class Home extends Component {\r\n   render() {\r\n\r\n       return (\r\n        <div className=\"site-card-border-less-wrapper\">\r\n            <Card title=\"浏览总量\" extra={<QuestionCircleOutlined className='bcolor'/>} bordered style={{ width: 350 }}>\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Card>\r\n                        <Statistic\r\n                            title=\"日同比\"\r\n                            value={11.28}\r\n                            precision={2}\r\n                            valueStyle={{ color: '#3f8600' }}\r\n                            prefix={<ArrowUpOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Card>\r\n                        <Statistic\r\n                            title=\"周同比\"\r\n                            value={9.3}\r\n                            precision={2}\r\n                            valueStyle={{ color: '#cf1322' }}\r\n                            prefix={<ArrowDownOutlined />}\r\n                            suffix=\"%\"\r\n                        />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <Row gutter={16} className='money'>\r\n                <Col span={12}>\r\n                <Statistic title=\"活跃用户(人)\" value={281293} />\r\n                </Col>\r\n                <Col span={12}>\r\n                <Statistic title=\"账户余额(元)\" value={1712893} precision={2} />\r\n                </Col>\r\n            </Row>,\r\n            <div className='tu-right'>\r\n                <SalesVolume/>\r\n            </div>\r\n            <div className='atab'>\r\n                <Tabs tabPosition={\"right\"}>\r\n                    <TabPane tab=\"访问量\" key=\"1\">\r\n                       <Chart2/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"销售量\" key=\"2\">\r\n                        <Chart/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"库存量\" key=\"3\">\r\n                        <Chart3/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n       )\r\n   }\r\n}","\r\n//添加分类的form组件\r\n\r\nimport React, { Component } from 'react'\r\nimport PorpTypes from 'prop-types'\r\n\r\nimport {\r\n    Form,\r\n    Select,\r\n    Input,\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\nexport default class AddForm extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n   static propTypes = {\r\n        categorys:PorpTypes.array.isRequired, //一级分类数组\r\n        parentId:PorpTypes.string.isRequired // 父分类id\r\n   }\r\n\r\n   componentDidUpdate () {\r\n    this.formRef.current.setFieldsValue({\r\n        categorys: this.props.categorys,\r\n        parentId: this.props.parentId,\r\n        })\r\n    }\r\n\r\n   render() {\r\n       const {categorys,parentId} = this.props\r\n       return (\r\n          <Form ref={this.formRef}>\r\n              <Item\r\n              name='parentId'\r\n              initialValue={parentId}\r\n              >\r\n                <Select>\r\n                    <Option value='0'>一级分类</Option>\r\n                    {\r\n                        categorys.map(c => <Option key={c._id}>{c.name}</Option>)\r\n                    }\r\n                </Select>\r\n              </Item>\r\n              <Item\r\n              name='categoryName'\r\n              initialValue=''\r\n              hasFeedback\r\n               //声明式验证：直接用别人定义好的规则进行验证\r\n               rules={\r\n                    [\r\n                        { required: true,whitespace:true, message: '分类名称必须输入!' }\r\n                    ]\r\n                }\r\n              >\r\n                <Input placeholder='请输入分类名称'></Input>\r\n              </Item>\r\n          </Form>\r\n       )\r\n   }\r\n}","\r\n//修改分类的form组件\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Form,\r\n    Input,\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\nexport default class UpdateForm extends Component {\r\n    formRef = React.createRef()\r\n\r\n   static propTypes = {\r\n        categoryName:PropTypes.string.isRequired,\r\n   }\r\n\r\n   componentDidUpdate () {\r\n        this.formRef.current.setFieldsValue({\r\n        categoryName: this.props.categoryName,\r\n    })\r\n   }\r\n\r\n   render() {\r\n       const {categoryName} = this.props\r\n       \r\n       return (\r\n          <Form ref={this.formRef}>\r\n              <Item\r\n              initialValue={categoryName}\r\n              name='categoryName'\r\n               rules={\r\n                    [\r\n                        { required: true,whitespace:true, message: '分类名称必须输入!' }\r\n                    ]\r\n                }\r\n              >\r\n                <Input placeholder='请输入分类名称'></Input>\r\n              </Item>\r\n          </Form>\r\n       )\r\n   }\r\n}\r\n","\r\n/**\r\n * 商品路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Table,\r\n    message,\r\n    Modal\r\n} from 'antd'\r\n\r\nimport {\r\n    PlusOutlined,\r\n    ArrowRightOutlined\r\n} from '@ant-design/icons'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys,reqUpdateCategory,reqAddCategory} from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\nexport default class Category extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n   state = {\r\n       loading:false, //是否正在获取数据中\r\n       categorys:[], //一级分类列表\r\n       subCategorys:[], //二级分类列表\r\n       parentId:'0', //当前需要显示分类列表的父分类ID (parentId)\r\n       parentName:'', //当前需要显示分类列表的父分类名称\r\n       showStatus:0, //标识添加/更新的确认框显示，0：都不显示，1：显示添加，2：显示修改\r\n   }\r\n\r\n   //初始化Table所有列的数组\r\n   initColumns = () => {\r\n    this.columns = [\r\n        {\r\n          title: '分类的名称',\r\n          dataIndex: 'name', // 显示数据对应的属性名\r\n        },\r\n        {\r\n          title: '操作',\r\n          width:300,\r\n          render: (category) => (\r\n              <span>\r\n                  <LinkButton onClick={ () => this.showUpdate(category)}>修改分类</LinkButton>\r\n                  {/* 如何向事件回调函数传递参数: 先定义一个匿名函数，在函数调用处理的函数并传入数据 */}\r\n                  {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)} >查看子分类</LinkButton> : null}\r\n              </span>\r\n          )\r\n        }\r\n      ]\r\n   }\r\n\r\n   //异步获取一级/二级分类列表显示 \r\n   //parentId:如果没有指定根据状态中的parentId请求，如果指定了就根据指定的请求\r\n   getCategorys = async (parentId) => {\r\n       //在发请求前显示loading\r\n       this.setState({loading:true})\r\n       parentId = parentId || this.state.parentId\r\n       //发异步ajax请求，获取数据\r\n       const result = await reqCategorys(parentId)\r\n       //在请求完成后，隐藏loading\r\n       this.setState({loading:false})\r\n       if(result.status===0) {\r\n           //取出分类数组(可能是一级也可能是二级的)\r\n            const categorys = result.data\r\n            if(parentId==='0') {\r\n                 //更新一级分类状态\r\n                this.setState({\r\n                    categorys\r\n                })\r\n            } else {\r\n                //更新二级分类状态\r\n                this.setState({\r\n                    subCategorys:categorys\r\n                })\r\n            }\r\n       } else {\r\n            message.error('获取分类列表失败！')\r\n       }\r\n   }\r\n\r\n   //显示指定一级分类对象的二级列表\r\n   showSubCategorys = (category) => {\r\n        //更新状态\r\n        this.setState({\r\n            parentId:category._id,\r\n            parentName:category.name\r\n        }, () => { //在状态更新且重新render()后执行\r\n            console.log('parentId',this.state.parentId)\r\n              //获取二级分类列表\r\n            this.getCategorys()\r\n        })\r\n        //setState() 不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n   }\r\n\r\n   //显示指定的一级分类\r\n   showCategorys = () => {\r\n       //更新为显示一级列表状态\r\n    this.setState ({\r\n        parentId:'0',\r\n\r\n    })\r\n   }\r\n\r\n   //点击取消隐藏确认框\r\n   handleCancel = () => {\r\n       this.setState({\r\n           showStatus:0\r\n       })\r\n   }\r\n\r\n   //显示添加的确认框\r\n   showAdd = () => {\r\n        this.setState({\r\n            showStatus:1\r\n        })\r\n   }\r\n\r\n   //添加分类\r\n   addCategory = () => {\r\n        console.log('addCategory()')\r\n        this.formRef.current.formRef.current.validateFields().then( async values => {\r\n             //隐藏确认框\r\n        this.setState({\r\n            showStatus:0\r\n        })\r\n\r\n        //搜集数据并提交添加分类的请求\r\n        const {parentId,categoryName} = values\r\n        //清除输入数据\r\n        this.formRef.current.formRef.current.resetFields()\r\n        const result = await reqAddCategory(categoryName,parentId)\r\n        if(result.status===0){\r\n            \r\n            //添加的分类就是当前分类列表下的分类\r\n            if(parentId===this.state.parentId){\r\n                //重新获取当前分类列表显示\r\n                this.getCategorys()\r\n            } else if(parentId==='0') { //在二级分类列表下添加一级分类，重新获取一级分类列表但不需要显示\r\n                this.getCategorys('0')\r\n            }\r\n        }\r\n        })\r\n        .catch(errorInfo => {\r\n            message.error('请输入',1)\r\n        })\r\n   }\r\n\r\n   //显示修改的确认框\r\n   showUpdate = (category) => {\r\n       \r\n    //保存分类对象\r\n    this.category = category\r\n    //更新状态\r\n    this.setState({\r\n        showStatus:2\r\n    })\r\n   }\r\n\r\n   //修改分类\r\n   updateCategory = () => {\r\n        console.log('updateCategory()');\r\n        //进行表单验证，只有通过了才处理\r\n        this.formRef.current.formRef.current.validateFields().then( async values => {\r\n                //准备数据\r\n                const categoryId = this.category._id\r\n                // const categoryName = this.refs.updateForm.getFieldValue('categoryName')\r\n                const {categoryName} = values  //得到子组件传过来的值\r\n                //清除输入数据\r\n                // this.formRef.current.formRef.current.resetFields()\r\n                \r\n                //发请求更新分类\r\n                const result = await reqUpdateCategory({categoryId,categoryName})\r\n                if(result.status===0) {\r\n                    //重新显示列表\r\n                    this.getCategorys()\r\n                }\r\n            \r\n                \r\n                //隐藏确认框\r\n                this.setState({\r\n                    showStatus:0\r\n                })\r\n            \r\n        })\r\n        .catch( () => {\r\n            message.error('请输入',1)\r\n          })\r\n   }\r\n\r\n\r\n   //为第一次render准备数据\r\n   UNSAFE_componentWillMount () {\r\n       this.initColumns()\r\n   }\r\n\r\n   //执行异步任务：发异步ajax请求\r\n   componentDidMount () {\r\n       //获取一级分类列表显示\r\n        this.getCategorys()\r\n   }\r\n\r\n   render() {\r\n\r\n        //读取状态数据\r\n        const {categorys,subCategorys,parentId,parentName,loading,showStatus} = this.state\r\n\r\n        //读取指定分类\r\n        const category = this.category || {name:''} //如果还没有  指定一个空对象\r\n        // console.log(category.name)\r\n\r\n       //card的左侧\r\n       const title = parentId==='0' ? '一级分类列表' : (\r\n           <span>\r\n               <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n               <ArrowRightOutlined style={{margin:10}}/>\r\n               <span>{parentName}</span>\r\n           </span>\r\n       )\r\n        //card的右侧\r\n        const exyra = (\r\n            <Button type='primary' onClick={this.showAdd}>\r\n                <PlusOutlined />\r\n                添加\r\n            </Button>\r\n        )\r\n          \r\n\r\n       return (\r\n        <Card title={title} extra={exyra}>\r\n            <Table \r\n            bordered\r\n            rowKey='_id'\r\n            loading={loading}\r\n            dataSource={parentId==='0' ? categorys : subCategorys} \r\n            columns={this.columns}\r\n            pagination={{defaultPageSize:6,showQuickJumper:true,}}\r\n            />\r\n             <Modal\r\n            title=\"添加分类\"\r\n            visible={showStatus===1}\r\n            onOk={this.addCategory}\r\n            okText='确定'\r\n            onCancel={this.handleCancel}\r\n            cancelText='取消'\r\n            >\r\n            <AddForm \r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            ref={this.formRef}\r\n            />\r\n            </Modal>\r\n            <Modal\r\n            title=\"修改分类\"\r\n            visible={showStatus===2}\r\n            onOk={this.updateCategory}\r\n            okText='确定'\r\n            onCancel={this.handleCancel}\r\n            cancelText='取消'\r\n            >\r\n            <UpdateForm \r\n            categoryName={category.name}\r\n            ref={this.formRef}/>\r\n            </Modal>\r\n        </Card>\r\n       )\r\n   }\r\n}\r\n\r\n\r\n","\r\n//添加角色的form组件\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\nexport default class AddForm extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n   render() {\r\n       return (\r\n          <Form ref={this.formRef}>\r\n              <Item\r\n              label='角色名称'\r\n              name='roleName'\r\n              initialValue=''\r\n              hasFeedback\r\n               //声明式验证：直接用别人定义好的规则进行验证\r\n               rules={\r\n                    [\r\n                        { required: true,whitespace:true, message: '角色名称必须输入!' }\r\n                    ]\r\n                }\r\n              >\r\n                <Input placeholder='请输入角色名称'></Input>\r\n              </Item>\r\n          </Form>\r\n       )\r\n   }\r\n}","\r\n//设置角色权限的form组件\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tree\r\n} from 'antd'\r\n\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item\r\n\r\n\r\nexport default class AuthForm extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    static propTypes = {\r\n        role: PropTypes.object\r\n    }\r\n\r\n    constructor (props) {\r\n      super(props)\r\n\r\n        //根据传入角色menus生成初始状态\r\n        const {menus} = this.props.role\r\n        this.state = {\r\n          checkedKeys:menus\r\n        }\r\n    }\r\n\r\n    //为父组件提交获取最新menus数据方法\r\n    getMenus = () => this.state.checkedKeys\r\n\r\n    getTreeData = (menuList) => {\r\n        return menuList.reduce((pre,item) => {\r\n            const {title,key,children} = item\r\n            // console.log(title,children)\r\n            pre.push({\r\n              title,\r\n              key,\r\n              children\r\n            })\r\n            return pre\r\n        },[])\r\n    }\r\n\r\n    //选中某个node时的回调\r\n    onCheck = checkedKeys => {\r\n      console.log('onCheck', checkedKeys);\r\n      this.setState({checkedKeys});\r\n    };\r\n\r\n    componentDidUpdate () {\r\n        this.formRef.current.setFieldsValue({\r\n            roleName: this.props.role.name,\r\n    })\r\n   }\r\n\r\n   //根据新传入的role来更新checkedKeys状态\r\n   //当组件接收到新的属性时自动调用\r\n   componentWillReceiveProps (nextProps) {\r\n     console.log('接收到新的属性自动调用',nextProps);\r\n     \r\n      const menus = nextProps.role.menus\r\n      this.setState({\r\n        checkedKeys:menus\r\n      })\r\n   }\r\n\r\n   UNSAFE_componentWillMount () {\r\n     const initData = [\r\n       {\r\n         title:'平台权限',\r\n         key:'all',\r\n         children:this.getTreeData(menuList)\r\n       }\r\n     ]\r\n    this.treeData = initData\r\n    console.log('设置权限弹窗：',this.treeData )\r\n    \r\n   }\r\n   \r\n\r\n   render() {\r\n\r\n       const {role} = this.props\r\n       const {checkedKeys} = this.state\r\n\r\n       return (\r\n        <Form ref={this.formRef}>\r\n              <Item\r\n              label='角色名称'\r\n              name='roleName'\r\n              initialValue={role.name}\r\n              >\r\n                <Input disabled></Input>\r\n              </Item>\r\n\r\n              <Tree\r\n                checkable\r\n                defaultExpandAll='true'\r\n                checkedKeys={checkedKeys} //默认选中\r\n                // onSelect={onSelect}\r\n                onCheck={this.onCheck}\r\n                treeData={this.treeData}\r\n                />\r\n        </Form>\r\n       )\r\n   }\r\n}","\r\n/**\r\n * 角色路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport {\r\n    Card,\r\n    Button,\r\n    Table,\r\n    Modal,\r\n    message\r\n} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport {reqRoles,reqAddRoles,reqUpdateRoles} from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport {logout} from '../../redux/actions'\r\n\r\nclass Role extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    state = {\r\n        roles:[] ,//所有角色的列表\r\n        role:{},//选中的role\r\n        isShowAdd:false, //是否显示添加界面\r\n        isShowAuth:false, //是否显示设置权限界面\r\n    }\r\n\r\n    // constructor (props) {\r\n    //     super(props)\r\n    //     this.auth = React.createRef()\r\n    // }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title:'角色名称',\r\n                dataIndex:'name'\r\n            },\r\n            {\r\n                title:'创建时间',\r\n                dataIndex:'create_time',\r\n                render:formateDate\r\n            },\r\n            {\r\n                title:'授权时间',\r\n                dataIndex:'auth_time',\r\n                render:formateDate\r\n            },\r\n            {\r\n                title:'授权人',\r\n                dataIndex:'auth_name'\r\n            },\r\n        ]\r\n    }\r\n\r\n    getRoles = async () => {\r\n        const result = await reqRoles()\r\n        if(result.status===0) {\r\n            const roles = result.data\r\n            this.setState({\r\n                roles\r\n            })\r\n        }\r\n    }\r\n\r\n    onRow = (role) => {\r\n            return {\r\n              onClick: event => { // 点击行\r\n                console.log('row onClick',role)\r\n                this.setState({\r\n                    role\r\n                })\r\n              }, \r\n            }\r\n    }\r\n\r\n    //添加角色\r\n    addRole = () => {\r\n\r\n        //进行表单验证\r\n\r\n        //搜集输入数据\r\n        this.formRef.current.formRef.current.validateFields().then( async values => {\r\n            //搜集数据\r\n            const {roleName} = values\r\n            //清除输入的数据\r\n            this.formRef.current.formRef.current.resetFields()\r\n            \r\n            //请求添加\r\n            const result = await reqAddRoles(roleName)\r\n            if(result.status===0) {\r\n                //根据结果显示/更新列表显示\r\n                message.success('添加角色成功')\r\n                //新产生的角色\r\n                const role = result.data\r\n                //更新roles状态\r\n                // const roles = [...this.state.roles]\r\n                // roles.push(role)\r\n                // this.setState({\r\n                //     roles,\r\n                //     isShowAdd:false\r\n                // })\r\n\r\n                //更新roles状态：基于原本状态数据更新\r\n                this.setState(state => ({\r\n                    roles:[...state.roles,role],\r\n                    isShowAdd:false\r\n                }))\r\n            } else {\r\n                message.error('添加角色失败')\r\n            }\r\n\r\n            // this.setState({\r\n            //     isShowAdd:false\r\n            // })\r\n        })\r\n    }\r\n\r\n    //修改角色\r\n    uptateRole = async () => {\r\n        //隐藏确认框\r\n        this.setState({\r\n            isShowAuth:false\r\n        })\r\n        const role = this.state.role\r\n        //得到最新的menus\r\n        const menus = this.formRef.current.getMenus()\r\n        role.menus = menus\r\n        role.auth_time = Date.now()\r\n        role.auth_name = this.props.user.username\r\n        // this.formRef.current.resetFields()\r\n\r\n        //请求更新\r\n        const result = await reqUpdateRoles(role)\r\n        if(result.status===0) {\r\n            //更新显示\r\n            // this.getRoles()\r\n            //如果当前更新的是自己角色权限，强制退出\r\n            if(role._id === this.props.user.role_id) {\r\n                this.props.logout()\r\n                message.success('当前用户角色权限修改了，请重新登录')\r\n            } else{\r\n                message.success('设置角色权限成功')\r\n                this.setState({\r\n                    roles:[...this.state.roles]\r\n                })\r\n            }\r\n        } else {\r\n            message.error('设置角色权限失败')\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.initColumns()\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getRoles()\r\n    }\r\n\r\n   render() {\r\n\r\n        const {roles,role,isShowAdd,isShowAuth} = this.state\r\n\r\n       const title = (\r\n           <span>\r\n               <Button type='primary' onClick={() => this.setState({isShowAdd:true})} style={{marginRight:17}}>创建角色</Button>\r\n               <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth:true})}>设置角色权限</Button>\r\n           </span>\r\n       )\r\n\r\n       return (\r\n           <Card title={title}>\r\n               <Table \r\n               bordered\r\n               rowKey='_id'\r\n            //    loading={loading}\r\n               dataSource={roles} \r\n               columns={this.columns}\r\n               rowSelection={{\r\n                   type:'radio',\r\n                   selectedRowKeys:[role._id],\r\n                   onSelect:(role) => {\r\n                    this.setState({\r\n                        role\r\n                    })\r\n                   }\r\n                }}\r\n               pagination={{defaultPageSize:PAGE_SIZE}}\r\n               onRow={this.onRow}\r\n               />\r\n               <Modal\r\n                title=\"添加角色\"\r\n                visible={isShowAdd}\r\n                onOk={this.addRole}\r\n                okText='确定'\r\n                onCancel={() => {\r\n                    this.setState({isShowAdd:false})\r\n                    this.formRef.current.formRef.current.resetFields()\r\n                }}\r\n                cancelText='取消'\r\n                >\r\n                <AddForm\r\n                ref={this.formRef}\r\n                />\r\n                </Modal>\r\n\r\n                <Modal\r\n                title=\"设置角色权限\"\r\n                visible={isShowAuth}\r\n                onOk={this.uptateRole}\r\n                okText='确定'\r\n                onCancel={() => {\r\n                    this.setState({isShowAuth:false})\r\n                }}\r\n                cancelText='取消'\r\n                >\r\n                <AuthForm ref={this.formRef} role={role}/>\r\n                </Modal>\r\n           </Card>\r\n       )\r\n   }\r\n}\r\n\r\nexport default connect (\r\n    state => ({user:state.user}),\r\n    {logout}\r\n) (Role)","\r\n//添加/修改用户的form组件\r\n\r\nimport React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Select,\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\nexport default class UserForm extends PureComponent {\r\n\r\n    formRef = React.createRef()\r\n\r\n    static propsTypes = {\r\n        roles:PropTypes.array.isRequired,\r\n        user:PropTypes.object\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        this.formRef.current.setFieldsValue({\r\n            username: this.props.user.username,\r\n            phone: this.props.user.phone,\r\n            email: this.props.user.email,\r\n            role_id: this.props.user.role_id,\r\n    })\r\n   }\r\n\r\n   render() {\r\n       \r\n       const {roles,user} = this.props\r\n       console.log(user);\r\n       \r\n\r\n       return (\r\n          <Form ref={this.formRef}>\r\n              <Item\r\n              label='用户名'\r\n              name='username'\r\n              initialValue={user.username}\r\n              \r\n               //声明式验证：直接用别人定义好的规则进行验证\r\n               rules={\r\n                    [\r\n                        { required: true,whitespace:true, message: '用户名必须输入!' }\r\n                    ]\r\n                }\r\n              >\r\n                <Input placeholder='请输入用户名'></Input>\r\n              </Item>\r\n              {\r\n                  user._id?null:(\r\n                    <Item\r\n                    label='密码'\r\n                    name='password'\r\n                    initialValue=''\r\n                    \r\n                     //声明式验证：直接用别人定义好的规则进行验证\r\n                     rules={\r\n                          [\r\n                              { required: true,whitespace:true, message: '密码必须设置!' }\r\n                          ]\r\n                      }\r\n                    >\r\n                      <Input type='password' placeholder='请输入密码'></Input>\r\n                    </Item>\r\n                  )\r\n              }\r\n              <Item\r\n              label='手机号'\r\n              name='phone'\r\n              initialValue={user.phone}\r\n              \r\n               //声明式验证：直接用别人定义好的规则进行验证\r\n               rules={\r\n                    [\r\n                        { required: true,whitespace:true, message: '手机号必须输入!' }\r\n                    ]\r\n                }\r\n              >\r\n                <Input placeholder='请输入手机号'></Input>\r\n              </Item>\r\n              <Item\r\n              label='邮箱'\r\n              name='email'\r\n              initialValue={user.email}\r\n              \r\n               //声明式验证：直接用别人定义好的规则进行验证\r\n               rules={\r\n                    [\r\n                        { required: true,whitespace:true, message: '邮箱必须输入!' }\r\n                    ]\r\n                }\r\n              >\r\n                <Input placeholder='请输入邮箱'></Input>\r\n              </Item>\r\n              <Item\r\n              label='角色'\r\n              name='role_id'\r\n              initialValue={user.role_id}\r\n              \r\n              >\r\n                <Select>\r\n                    {\r\n                        roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                    }\r\n                </Select>\r\n              </Item>\r\n          </Form>\r\n       )\r\n   }\r\n}","\r\n/**\r\n * 用户路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Table,\r\n    Modal,\r\n    message\r\n} from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport LinkButton from '../../components/link-button/index'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport { reqUsers, reqDeleteUser, reqAddOrUpdateUser } from '../../api'\r\nimport UserForm from './user-form'\r\nexport default class User extends Component {\r\n\r\n    formRef = React.createRef()\r\n\r\n    state = {\r\n        users:[],//所有的用户列表\r\n        roles:[],//所有角色的列表\r\n        isShow:false,//标识是否显示确认框\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title:'用户名',\r\n                dataIndex:'username'\r\n            },\r\n            {\r\n                title:'邮箱',\r\n                dataIndex:'email'\r\n            },\r\n            {\r\n                title:'电话',\r\n                dataIndex:'phone'\r\n            },\r\n            {\r\n                title:'注册时间',\r\n                dataIndex:'create_time',\r\n                render:formateDate\r\n            },\r\n            {\r\n                title:'所属角色',\r\n                dataIndex:'role_id',\r\n                render: (role_id) => this.roleNames[role_id]\r\n            },\r\n            {\r\n                title:'操作',\r\n                render:(user) => (\r\n                    <span>\r\n                        <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n                        <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n    }\r\n\r\n    //根据role的数组，生成包含所有角色名的对象(属性名用角色id值)\r\n    initRoleName = (roles) => {\r\n        const roleNames = roles.reduce((pre,role) => {\r\n            pre[role._id] = role.name\r\n            return pre\r\n        },{})\r\n        //保存\r\n        this.roleNames = roleNames\r\n    }\r\n\r\n    //显示添加界面\r\n    showAdd = () => {\r\n        this.user = null //去除前面保存的user\r\n        this.setState({isShow:true})\r\n    }\r\n\r\n    //显示修改界面\r\n    showUpdate = (user) => {\r\n        this.user = user //保存user\r\n        this.setState({\r\n            isShow:true\r\n        })\r\n    }\r\n\r\n    //删除指定用户\r\n    deleteUser = (user) => {\r\n        Modal.confirm({\r\n            title: `确认删除${user.username}吗？`,\r\n            content: '您还是再挣扎一下下吧',\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText:'确定',\r\n            onOk: async () => {\r\n                const result = await reqDeleteUser(user._id)\r\n                if(result.status===0) {\r\n                    message.success(`成功删除${user.username}`)\r\n                    this.getUsers()\r\n                } else {\r\n                    message.error('删除失败')\r\n                }\r\n            },\r\n            cancelText:'取消'\r\n          })\r\n    }\r\n\r\n    //添加/更新用户\r\n    addOrUpdateUser = async () => {\r\n        this.setState({\r\n            isShow:false\r\n        })\r\n        //1.收集输入数据\r\n        const user = this.formRef.current.formRef.current.getFieldsValue()\r\n        \r\n        //清空输入数据\r\n        this.formRef.current.formRef.current.resetFields()\r\n\r\n        //如果是更新，需要给user指定_id属性\r\n        if(this.user && this.user._id) {\r\n            user._id = this.user._id\r\n        }\r\n        \r\n        console.log(user)\r\n        //2.提交添加的请求\r\n        const result = await reqAddOrUpdateUser(user)\r\n        console.log(result)\r\n        //3.更新列表显示\r\n        if(result.status===0){\r\n            message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n            this.getUsers()\r\n        }\r\n    }\r\n\r\n    //获取所有用户\r\n    getUsers = async () => {\r\n        const result = await reqUsers()\r\n        if(result.status===0) {\r\n            const {users,roles} = result.data\r\n            this.initRoleName(roles)\r\n            this.setState({\r\n                users,\r\n                roles\r\n            })\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this.initColumns()\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getUsers()\r\n    }\r\n\r\n   render() {\r\n\r\n       const {users,isShow,roles} = this.state\r\n       const user = this.user || {}\r\n\r\n       const title = <Button type='primary' onClick={() => this.showAdd()}>创建用户</Button>\r\n\r\n       return (\r\n           <Card title={title}>\r\n                 <Table \r\n                    bordered\r\n                    rowKey='_id'\r\n                    dataSource={users} \r\n                    columns={this.columns}\r\n                    pagination={{defaultPageSize:PAGE_SIZE}}\r\n                    />\r\n                    <Modal\r\n                    title={user._id ? '修改用户' : '添加用户'}\r\n                    visible={isShow}\r\n                    onOk={this.addOrUpdateUser}\r\n                    okText='确定'\r\n                    onCancel={() => {\r\n                         //清空输入数据\r\n                        this.formRef.current.formRef.current.resetFields()\r\n                        this.setState({isShow:false})\r\n                    }}\r\n                    cancelText='取消'\r\n                    >\r\n                    <UserForm ref={this.formRef} user={user} roles={roles}/>\r\n                    </Modal>\r\n           </Card>\r\n       )\r\n   }\r\n}","\r\n/**\r\n * 柱状图路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {Card, Button} from 'antd' \r\nimport ReactEcharts from 'echarts-for-react'\r\nexport default class Bar extends Component {\r\n\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n        stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n      }\r\n    \r\n\r\n    getOption = (sales,stores) => {\r\n        return {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量','库存','浏览量']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: sales\r\n            },\r\n            {\r\n                name: '库存',\r\n                type: 'bar',\r\n                data: stores\r\n            },\r\n            {\r\n                name: '浏览量',\r\n                type: 'bar',\r\n                data: [20,30,40,25,23,33]\r\n            }]\r\n        }\r\n    }\r\n\r\n    update = () => {\r\n        this.setState(state =>({\r\n            sales:state.sales.map(s => s+1),\r\n            stores:state.stores.reduce((pre,store) => {\r\n                    pre.push(store-1)\r\n                return pre\r\n            },[])\r\n        }))\r\n    }\r\n\r\n    getOption1 = () => {\r\n        return {\r\n            title: {\r\n                text: '某地区蒸发量和降水量',\r\n                subtext: '纯属虚构'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['蒸发量', '降水量']\r\n            },\r\n            toolbox: {\r\n                show: true,\r\n                feature: {\r\n                    dataView: {show: true, readOnly: false},\r\n                    magicType: {show: true, type: ['line', 'bar']},\r\n                    restore: {show: true},\r\n                    saveAsImage: {show: true}\r\n                }\r\n            },\r\n            calculable: true,\r\n            xAxis: [\r\n                {\r\n                    type: 'category',\r\n                    data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\r\n                }\r\n            ],\r\n            yAxis: [\r\n                {\r\n                    type: 'value'\r\n                }\r\n            ],\r\n            series: [\r\n                {\r\n                    name: '蒸发量',\r\n                    type: 'bar',\r\n                    data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],\r\n                    markPoint: {\r\n                        data: [\r\n                            {type: 'max', name: '最大值'},\r\n                            {type: 'min', name: '最小值'}\r\n                        ]\r\n                    },\r\n                    markLine: {\r\n                        data: [\r\n                            {type: 'average', name: '平均值'}\r\n                        ]\r\n                    }\r\n                },\r\n                {\r\n                    name: '降水量',\r\n                    type: 'bar',\r\n                    data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],\r\n                    markPoint: {\r\n                        data: [\r\n                            {name: '年最高', value: 182.2, xAxis: 7, yAxis: 183},\r\n                            {name: '年最低', value: 2.3, xAxis: 11, yAxis: 3}\r\n                        ]\r\n                    },\r\n                    markLine: {\r\n                        data: [\r\n                            {type: 'average', name: '平均值'}\r\n                        ]\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n   render() {\r\n       const {sales,stores} = this.state\r\n       return (\r\n           <div>\r\n                <Card> \r\n                    <Button type='primary' onClick={this.update}>更新</Button> \r\n                </Card> \r\n                <Card title='柱状图一'> \r\n                    <ReactEcharts option={this.getOption(sales,stores)}/> \r\n                </Card>\r\n                <Card title='柱状图二'> \r\n                    <ReactEcharts option={this.getOption1()}/> \r\n                </Card>\r\n           </div>\r\n       )\r\n   }\r\n}","\r\n/**\r\n * 折线图路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {Card, Button} from 'antd' \r\nimport ReactEcharts from 'echarts-for-react'\r\nexport default class Line extends Component {\r\n\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n        stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n      }\r\n    \r\n\r\n    getOption = (sales,stores) => {\r\n        return {\r\n            title: {\r\n                text: 'ECharts 入门示例'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['销量','库存','浏览量']\r\n            },\r\n            xAxis: {\r\n                data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: '销量',\r\n                type: 'line',\r\n                data: sales\r\n            },\r\n            {\r\n                name: '库存',\r\n                type: 'line',\r\n                data: stores\r\n            },\r\n            {\r\n                name: '浏览量',\r\n                type: 'line',\r\n                data: [20,30,40,25,23,33]\r\n            }]\r\n        }\r\n    }\r\n\r\n    update = () => {\r\n        this.setState(state =>({\r\n            sales:state.sales.map(s => s+1),\r\n            stores:state.stores.reduce((pre,store) => {\r\n                    pre.push(store-1)\r\n                return pre\r\n            },[])\r\n        }))\r\n    }\r\n    \r\n    getOption1 = () => {\r\n\r\n        var data = [];\r\n\r\n        for (var i = 0; i <= 360; i++) {\r\n            var t = i / 180 * Math.PI;\r\n            var r = Math.sin(2 * t) * Math.cos(2 * t);\r\n            data.push([r, i]);\r\n        }\r\n\r\n        return {\r\n            title: {\r\n                text: '极坐标双数值轴'\r\n            },\r\n            legend: {\r\n                data: ['line']\r\n            },\r\n            polar: {\r\n                center: ['50%', '54%']\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis',\r\n                axisPointer: {\r\n                    type: 'cross'\r\n                }\r\n            },\r\n            angleAxis: {\r\n                type: 'value',\r\n                startAngle: 0\r\n            },\r\n            radiusAxis: {\r\n                min: 0\r\n            },\r\n            series: [{\r\n                coordinateSystem: 'polar',\r\n                name: 'line',\r\n                type: 'line',\r\n                showSymbol: false,\r\n                data: data\r\n            }],\r\n            animationDuration: 2000\r\n        }\r\n    }\r\n\r\n   render() {\r\n    const {sales,stores} = this.state\r\n        return (\r\n            <div>\r\n                <Card> \r\n                    <Button type='primary' onClick={this.update}>更新</Button> \r\n                </Card> \r\n                <Card title='折线图一'> \r\n                    <ReactEcharts option={this.getOption(sales,stores)}/> \r\n                </Card>\r\n                <Card title='折线图二'> \r\n                    <ReactEcharts option={this.getOption1()}/> \r\n                </Card>\r\n            </div>\r\n        )\r\n   }\r\n}","\r\n/**\r\n * 饼状图路由\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {Card} from 'antd' \r\nimport ReactEcharts from 'echarts-for-react'\r\nexport default class Pie extends Component {\r\n\r\n    state = {\r\n        sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n        stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n      }\r\n    \r\n\r\n    getOption = () => {\r\n        return {\r\n            title: {\r\n                text: '某站点用户访问来源',\r\n                subtext: '纯属虚构',\r\n                left: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n            },\r\n            series: [\r\n                {\r\n                    name: '访问来源',\r\n                    type: 'pie',\r\n                    radius: '55%',\r\n                    center: ['50%', '60%'],\r\n                    data: [\r\n                        {value: 335, name: '直接访问'},\r\n                        {value: 310, name: '邮件营销'},\r\n                        {value: 234, name: '联盟广告'},\r\n                        {value: 135, name: '视频广告'},\r\n                        {value: 1548, name: '搜索引擎'}\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    getOption1 = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n                bottom: 10,\r\n                left: 'center',\r\n                data: ['西凉', '益州', '兖州', '荆州', '幽州']\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'pie',\r\n                    radius: '65%',\r\n                    center: ['50%', '50%'],\r\n                    selectedMode: 'single',\r\n                    data: [\r\n                        {value: 535, name: '荆州'},\r\n                        {value: 510, name: '兖州'},\r\n                        {value: 634, name: '益州'},\r\n                        {value: 735, name: '西凉'}\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ],\r\n        }\r\n    }\r\n\r\n   render() {\r\n        return (\r\n            <div>\r\n                <Card title='饼图一'> \r\n                    <ReactEcharts option={this.getOption()}/> \r\n                </Card>\r\n                <Card title='饼图二'> \r\n                    <ReactEcharts option={this.getOption1()}/> \r\n                </Card>\r\n            </div>\r\n        )\r\n   }\r\n}","/**\r\n * \r\n * 后台管理的路由组件\r\n * \r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport {Redirect,Route,Switch} from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\n\r\nconst {Footer, Sider, Content } = Layout\r\n\r\nclass Admin extends Component {\r\n   render() {\r\n       const user = this.props.user\r\n       //如果内存中没有user ==> 当前没有登录\r\n       if(!user || !user._id) {\r\n            //自动跳转到登录界面(在render()中)\r\n            return <Redirect to='/login'/>\r\n       }\r\n       return (\r\n        <Layout style={{minHeight:'100%'}}>\r\n        <Sider>\r\n            <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{margin:20, backgroundColor:'#fff'}}>\r\n              <Switch>\r\n                <Route path='/home' component={Home}/>\r\n                <Route path='/category' component={Category}/> \r\n                <Route path='/product' component={Product}/> \r\n                <Route path='/role' component={Role}/> \r\n                <Route path='/user' component={User}/> \r\n                <Route path='/charts/bar' component={Bar}/> \r\n                <Route path='/charts/line' component={Line}/> \r\n                <Route path='/charts/pie' component={Pie}/>\r\n                <Redirect to='/home' />\r\n              </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign:'center',color:'#cccc'}}>使用谷歌浏览器，可以获得更佳的页面操作体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n       )\r\n   }\r\n}\r\n\r\nexport default connect(\r\n  state => ({user:state.user}),\r\n  {}\r\n) (Admin)","import React, {Component} from 'react'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/**\r\n * \r\n * 应用的根组件\r\n * \r\n */\r\n\r\n export default class extends Component {\r\n\r\n     \r\n    render () {\r\n        return (\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route path='/login' component={Login}></Route>\r\n                    <Route path='/' component={Admin}></Route>\r\n                </Switch>\r\n            </HashRouter>\r\n        )\r\n    }\r\n }\r\n ","/*\r\n用来根据老的state和指定的action生成并返回新的state的函数\r\n */\r\n\r\n import {combineReducers} from 'redux'\r\n\r\n import storageUtils from '../utils/storageUtils'\r\n import {\r\n     SET_HEADER_TITLE,\r\n     RECEIVE_USER,\r\n     RESET_USER\r\n} from './action-types'\r\n\r\n/*\r\n用来管理头部标题的reducer函数\r\n*/\r\n\r\n const initHeaderTitle = '首页'\r\n\r\n function headerTitle (state=initHeaderTitle,action) {\r\n     switch (action.type) {\r\n            case SET_HEADER_TITLE:\r\n                 return action.data\r\n            default:\r\n             return state\r\n     }\r\n }\r\n\r\n /*\r\n用来管理当前登录用户的reducer函数\r\n*/\r\n\r\nconst initUser = storageUtils.getUser()\r\n\r\nfunction user (state=initUser,action) {\r\n    switch (action.type) {\r\n        case RECEIVE_USER:\r\n            return action.user\r\n        case RESET_USER:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n/*\r\n向外默认暴露的是合并产生的reducer函数\r\n管理的总的state的结构：\r\n    {\r\n        headerTitle:'首页',\r\n        user:{}\r\n    }\r\n*/\r\n export default combineReducers ({\r\n    headerTitle,\r\n    user\r\n })","/*\r\nredux最核心的管理对象store\r\n*/\r\n\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport reducer from './reducer' \r\n\r\nexport default createStore(\r\n   reducer,\r\n   composeWithDevTools(applyMiddleware(thunk))\r\n)","/**\r\n * \r\n * 入口js\r\n * \r\n */\r\n\r\nimport React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport App from './App'\r\nimport store from './redux/store'\r\n\r\n\r\n//将App组件标签渲染到index页面的div上\r\nReactDom.render((\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n),document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}